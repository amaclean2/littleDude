/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import ChickenPenModel from "./models/chickenPen.gltf";

const ChickenPen = ({ ...props }) => {
  const group = useRef();
  const { nodes, materials } = useGLTF(ChickenPenModel);
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={nodes.Cylinder.material}
      />
      <mesh
        geometry={nodes.Cylinder001.geometry}
        material={nodes.Cylinder001.material}
        position={[0, 0, -2]}
      />
      <mesh
        geometry={nodes.Cylinder002.geometry}
        material={nodes.Cylinder002.material}
        position={[2, 0, 0]}
      />
      <mesh
        geometry={nodes.Cylinder003.geometry}
        material={nodes.Cylinder003.material}
        position={[2, 0, -2]}
      />
      <mesh
        geometry={nodes.Cylinder004.geometry}
        material={nodes.Cylinder004.material}
        position={[5.23, 0.45, 0.25]}
        rotation={[0, 0, 1.49]}
        scale={[0.5, 5.5, 0.5]}
      />
      <mesh
        geometry={nodes.Cylinder005.geometry}
        material={nodes.Cylinder005.material}
        position={[5.23, 0.45, -5.23]}
        rotation={[1.5, 1.57, 0]}
        scale={[0.5, 5.5, 0.5]}
      />
      <mesh
        geometry={nodes.Cylinder006.geometry}
        material={nodes.Cylinder006.material}
        position={[-0.23, 0.45, -5.23]}
        rotation={[-Math.PI, 0, -1.64]}
        scale={[0.5, 5.5, 0.5]}
      />
      <mesh
        geometry={nodes.Cylinder007.geometry}
        material={nodes.Cylinder007.material}
        position={[-0.23, 0.45, 0.24]}
        rotation={[-1.5, -Math.PI / 2, 0]}
        scale={[0.5, 5.5, 0.5]}
      />
    </group>
  );
};

export default ChickenPen;

useGLTF.preload(ChickenPenModel);
